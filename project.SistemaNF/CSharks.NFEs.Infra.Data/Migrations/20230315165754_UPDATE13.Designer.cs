// <auto-generated />
using System;
using CSharks.NFEs.Infra.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharks.NFEs.Infra.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20230315165754_UPDATE13")]
    partial class UPDATE13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("CEP")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("District")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Enrollment")
                        .HasColumnType("longtext");

                    b.Property<string>("Ie")
                        .HasColumnType("longtext");

                    b.Property<string>("InformedAdress")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResidentialNumber")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("412a7651-7cd4-4528-9cc3-306b3e11a050"),
                            Address = "Rua Gustavo Zimmermann",
                            CEP = "89062100 ",
                            City = "8357",
                            CpfCnpj = "43975686855",
                            District = "Itoupava Central",
                            Email = "juninhocb@hotmail.com",
                            Enrollment = "F",
                            Ie = "16",
                            InformedAdress = "1",
                            Name = "Carlos Eduardo dos Santos Junior",
                            ResidentialNumber = "2421"
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.EmitedNF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CodVerify")
                        .HasColumnType("longtext");

                    b.Property<string>("EmitDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LinkPDF")
                        .HasColumnType("longtext");

                    b.Property<string>("NoNfse")
                        .HasColumnType("longtext");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ValueNF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Emiteds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4830455-6511-4be7-aab2-ff1efa488a96"),
                            ClientName = "PATRICK WEBER",
                            CodVerify = "8357738593202582530720240315032023189724",
                            EmitDate = "23-03-15-19-29",
                            LinkPDF = "https://homologacao.atende.net//homologacao.atende.net//autoatendimento/servicos/consulta-de-autenticidade-de-nota-fiscal-eletronica-nfse/detalhar/1/identificador/atende.php?rot=1&aca=119&ajax=t&processo=viewFile&ajaxPrevent=1678894724274&file=3BEC12ECA3FEFF0F56229CD1C8598E57ABEC522A&sistema=wne&classe=upload_nota_fiscal_eletronica",
                            NoNfse = "74",
                            ServiceName = "Programação",
                            Situation = "Success",
                            ValueNF = "35"
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.Enterprise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enterprises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dffa0ee5-bce8-43e0-8401-fd5c57c1befc"),
                            City = "8357",
                            CpfCnpj = "25825307000152",
                            Email = "csharkenterprise@hotmail.com",
                            Name = "Csharks Developers LTDA"
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.NF_UTILS.ISQN", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aliquot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Isqns");
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("aliquota_item_lista_servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("codigo_item_lista_servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("codigo_local_prestacao_servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descritivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("situacao_tributaria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tributa_municipio_prestador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("valor_tributavel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("842cb543-e444-4634-a4f4-7191cce6987c"),
                            aliquota_item_lista_servico = "5",
                            codigo_item_lista_servico = "702",
                            codigo_local_prestacao_servico = "8357",
                            descritivo = "Assessoria e consultoria em informática.",
                            situacao_tributaria = "0",
                            tributa_municipio_prestador = "S",
                            valor_tributavel = "1"
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.TOM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<int>("Profile")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc7b9b60-543a-4e42-8cfe-2337e8738830"),
                            Email = "teste@hotmail.com",
                            EnterpriseId = new Guid("dffa0ee5-bce8-43e0-8401-fd5c57c1befc"),
                            Login = "dev",
                            Name = "Desenvolvedor",
                            Password = "MTIz",
                            Profile = 1
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.User", b =>
                {
                    b.HasOne("CSharks.NFEs.Domain.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });
#pragma warning restore 612, 618
        }
    }
}
