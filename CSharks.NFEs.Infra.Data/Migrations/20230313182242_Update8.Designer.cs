// <auto-generated />
using System;
using CSharks.NFEs.Infra.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharks.NFEs.Infra.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20230313182242_Update8")]
    partial class Update8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Enrollment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.Enterprise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enterprises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce5664c3-523f-4791-aeda-bd17d5a55a99"),
                            City = "8453",
                            CpfCnpj = "12345678901234",
                            Email = "csharkenterprise@hotmail.com",
                            Name = "Csharks Developers LTDA"
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.NF_UTILS.ISQN", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Aliquot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Isqns");
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("aliquota_item_lista_servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("codigo_item_lista_servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("codigo_local_prestacao_servico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("descritivo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("situacao_tributaria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tributa_municipio_prestador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("valor_tributavel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4599466-04ba-4570-85f4-d3f13c0f78e4"),
                            aliquota_item_lista_servico = "5",
                            codigo_item_lista_servico = "702",
                            codigo_local_prestacao_servico = "8357",
                            descritivo = "Teste",
                            situacao_tributaria = "000",
                            tributa_municipio_prestador = "S",
                            valor_tributavel = "0"
                        },
                        new
                        {
                            Id = new Guid("96397d8e-90a6-4320-a67a-cda18286bfb7"),
                            aliquota_item_lista_servico = "2",
                            codigo_item_lista_servico = "0106",
                            codigo_local_prestacao_servico = "8357",
                            descritivo = "Assessoria e consultoria em informática.",
                            situacao_tributaria = "000",
                            tributa_municipio_prestador = "S",
                            valor_tributavel = "0"
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.TOM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EnterpriseId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<int>("Profile")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eab4085c-de7e-4a6f-b351-20224630fa6c"),
                            Email = "teste@hotmail.com",
                            EnterpriseId = new Guid("ce5664c3-523f-4791-aeda-bd17d5a55a99"),
                            Login = "dev",
                            Name = "Desenvolvedor",
                            Password = "MTIz",
                            Profile = 1
                        });
                });

            modelBuilder.Entity("CSharks.NFEs.Domain.Models.User", b =>
                {
                    b.HasOne("CSharks.NFEs.Domain.Models.Enterprise", "Enterprise")
                        .WithMany()
                        .HasForeignKey("EnterpriseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enterprise");
                });
#pragma warning restore 612, 618
        }
    }
}
